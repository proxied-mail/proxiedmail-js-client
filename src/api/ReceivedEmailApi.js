/**
 * ProxiedMail API
 * ProxiedMail API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV1ReceivedEmailsLinksProxyBindingIdGet200Response from '../model/ApiV1ReceivedEmailsLinksProxyBindingIdGet200Response';
import ApiV1ReceivedEmailsReceivedEmailIdGet200Response from '../model/ApiV1ReceivedEmailsReceivedEmailIdGet200Response';

/**
* ReceivedEmail service.
* @module api/ReceivedEmailApi
* @version 1.0.0
*/
export default class ReceivedEmailApi {

    /**
    * Constructs a new ReceivedEmailApi. 
    * @alias module:api/ReceivedEmailApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1ReceivedEmailsLinksProxyBindingIdGet operation.
     * @callback module:api/ReceivedEmailApi~apiV1ReceivedEmailsLinksProxyBindingIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV1ReceivedEmailsLinksProxyBindingIdGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get received emails list by proxy email (last 55)
     * 
     * @param {String} proxyBindingId proxyBindingId of proxy email that needs to be fetched
     * @param {module:api/ReceivedEmailApi~apiV1ReceivedEmailsLinksProxyBindingIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV1ReceivedEmailsLinksProxyBindingIdGet200Response}
     */
    apiV1ReceivedEmailsLinksProxyBindingIdGet(proxyBindingId, callback) {
      let postBody = null;
      // verify the required parameter 'proxyBindingId' is set
      if (proxyBindingId === undefined || proxyBindingId === null) {
        throw new Error("Missing the required parameter 'proxyBindingId' when calling apiV1ReceivedEmailsLinksProxyBindingIdGet");
      }

      let pathParams = {
        'proxyBindingId': proxyBindingId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV1ReceivedEmailsLinksProxyBindingIdGet200Response;
      return this.apiClient.callApi(
        '/api/v1/received-emails-links/{proxyBindingId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ReceivedEmailsReceivedEmailIdGet operation.
     * @callback module:api/ReceivedEmailApi~apiV1ReceivedEmailsReceivedEmailIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV1ReceivedEmailsReceivedEmailIdGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get content of received email by id
     * 
     * @param {String} receivedEmailId receivedEmailId of received email that needs to be fetched
     * @param {module:api/ReceivedEmailApi~apiV1ReceivedEmailsReceivedEmailIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV1ReceivedEmailsReceivedEmailIdGet200Response}
     */
    apiV1ReceivedEmailsReceivedEmailIdGet(receivedEmailId, callback) {
      let postBody = null;
      // verify the required parameter 'receivedEmailId' is set
      if (receivedEmailId === undefined || receivedEmailId === null) {
        throw new Error("Missing the required parameter 'receivedEmailId' when calling apiV1ReceivedEmailsReceivedEmailIdGet");
      }

      let pathParams = {
        'receivedEmailId': receivedEmailId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV1ReceivedEmailsReceivedEmailIdGet200Response;
      return this.apiClient.callApi(
        '/api/v1/received-emails/{receivedEmailId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
